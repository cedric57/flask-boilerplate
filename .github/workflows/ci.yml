# .github/workflows/ci.yml

# Nom du workflow
name: CI Pipeline

# Événements qui déclenchent le workflow
on:
  push:  # Lorsque du code est poussé
    branches:
      - main  # Sur la branche principale
  pull_request:  # Lorsqu'une pull request est ouverte
    branches:
      - main  # Sur la branche principale

# Définition des jobs
jobs:
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-env
      - name: Run pre-commit on all files
        run: poetry run pre-commit run --all-files

      - name: Run tests with coverage
        run: poetry run pytest --doctest-modules --junitxml=junit.xml -o junit_family=legacy --cov=src tests --cov-report=xml --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-env

      - name: Security analysis with Bandit
        run: poetry run bandit .

      - name: Dependency vulnerability check with Safety
        uses: pyupio/safety-action@v1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}

      - name: Security analysis with Snyk
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  build:
    name: Build Package
    needs: [quality, security]
    runs-on: ubuntu-24.04  # Environnement dans lequel le job s'exécute
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:  # Liste des étapes à exécuter dans le job
    - name: Checkout code  # Étape pour récupérer le code du dépôt
      uses: actions/checkout@v4  # Utilisation de l'action checkout

    - name: Set up Python  # Étape pour configurer Python
      uses: actions/setup-python@v5  # Utilisation de l'action setup-python
      with:
        python-version: '3.12'  # Version de Python à utiliser

    - name: Install dependencies  # Étape pour installer les dépendances
      run: |  # Commandes à exécuter
        python -m pip install --upgrade pip  # Mettre à jour pip
        pip install poetry  # Installer Poetry
        poetry lock
        poetry install --no-root  # Installer les dépendances définies dans pyproject.toml

    - name: Run tests  # Étape pour exécuter les tests
      run: poetry run pytest  # Exécuter les tests avec Pytest via Poetry
