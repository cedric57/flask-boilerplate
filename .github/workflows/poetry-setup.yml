name: Install Poetry and configure cache

on:
  workflow_call:

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}-${{ steps.setup-python.outputs.python-version }}

      - name: Load cached .local
        id: cached-dotlocal
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}

      - name: Install Python poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          virtualenvs-path: .venv
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Install dependencies
        shell: bash
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry lock
          poetry install --no-interaction --no-root

      - name: Activate environment
        shell: bash
        run: source .venv/bin/activate
